
Model validation hasn't posed significant technical challenges, and the Model Review and Validation (MRV) team hasn't raised many technical questions. The main challenge lies in communication, particularly because the MRV team isn't very familiar with the code. Thus, I need to assist them in understanding it. They frequently ask questions like where the code for loading data is, where likelihood values are assigned in the code, or the origins of a specific variable. They show a particular interest in outcome analysis, for example, wanting to see code capable of generating a single AUC (Area Under the Curve) value. While I run experiments within a notebook environment, where all model testing is conducted, this setup can be challenging for the MRV team to grasp. They prefer a simplified script that directly delivers the desired results. Consequently, I wrote a separate script specifically to print the AUC for data from a specified month. The lesson learned here is the need for better code modularization. If the code were modularized effectively, this process would be simpler. Previously, my focus on code modularization was primarily for reusability in a production environment, but I overlooked its importance in the validation and code review processes, where reusability is equally crucial.
